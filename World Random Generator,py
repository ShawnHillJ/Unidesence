import math
import bpy
import bge
cont = bge.logic.getCurrentController()
obj = cont.owner
default = False
chunks = 64
world_list = []

def chunk_sort(chunks1yn):
#this does a good amount of math m8
    total_chunks = chunks1
    for x in range(1,51)
        if (x ** 2) == total_chunks:
            xrows = math.sqrt(total_chunks)
            yrows = math.sqrt(total_chunks)
            Xoffset = ((((xrows / 2) - 1) * 8) - 4)
            Yoffset = Xoffset
#now lets make the table list for chunks
            Chunk_List = []
            for x in range(total_chunks):
                Chunk_List.append([xrows, yrows])
    return Chunk_List

#Here is an example of a randomly generated building

def make_village(num):
    village1 = [#This is a standard village from 0 on zed
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    3,3,3,3,3,3,3,3,
    ]
    village2 = [
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,5,5,5,5,5,5,0,
    0,5,5,5,5,5,5,0,
    0,5,5,5,5,5,5,0,
    0,5,5,5,5,5,5,0,
    0,5,5,5,5,5,5,0,
    0,5,5,5,5,5,5,0,
    3,3,3,3,3,3,3,3
    ]
    village3 = [
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,5,5,5,5,5,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    3,3,3,3,3,3,3,3
    ]
    village4 = [
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,5,5,5,5,5,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    3,3,3,3,3,3,3,3,
    ]
    village5 = [
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,5,5,5,5,5,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    3,3,3,3,3,3,3,3,
    ]
    village6 = [
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,5,5,5,5,5,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,0,0,0,0,5,0,
    0,5,5,5,5,5,5,0,
    3,3,3,3,3,3,3,3,
    ]
    village7 = [
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,5,5,5,5,5,5,0,
    0,5,5,5,5,5,5,0,
    0,5,5,5,5,5,5,0,
    0,5,5,0,0,5,5,0,
    0,5,5,0,0,5,5,0,
    0,5,5,5,5,5,5,0,
    3,3,3,3,3,3,3,3,
    ]
    village8 = [
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    0,0,0,0,0,0,0,0,
    3,3,3,3,3,3,3,3,
    ]
    if num == 1:
        return village1
    if num == 2:
        return village2
    if num == 3:
        return village3
    if num == 4:
        return village4
    if num == 5:
        return village5
    if num == 6:
        return village6
    if num == 7:
        return village7
    if num == 8:
        return village8

def spawn_unit(biome_control, flatworld_control, to_load_file, world_list):
    biome = 1
    if biome_control == False:
        biome_chance = randint(1, 30)
    if unit_no == 1:
        global world_list
    Unit_List = []
    if flatworld_control == False and biome == 1:#This is grass biome
        for x in range(64):
            Terrain_List = [randint(1, 10) + offset, randint(1, 10) + offset, randint(1, 10) + offset, randint(1, 10) + offset, randint(1, 10) + offset, randint(1, 10) + offset, randint(1, 10) + offset, randint(1, 10) + offset]
             for y in range(8):
                Unit_List[x][y] = []
                random_chance = randint(1, 100)
                if x == 0:
                    Unit_List[x][y].append(1)
                if x > 0 and x < 32:#This is for ores

                    if random_chance in range(1, 60):#Cold, hard stone!
                        Unit_List[x][y].append(5)

                    if random_chance in range(60, 70):#Iron!
                        Unit_List[x][y].append(9)

                    if random_chance in range(70, 74):#Tin!
                        Unit_List[x][y].append(8)

                    if random_chance in range(74, 79):#Aluminum!
                        Unit_List[x][y].append(10)

                    if random_chance in range(79, 84):#Copper gets it done!
                        Unit_List[x][y].append(7)

                    if random_chance in range(84, 88) and x > 0 and x < 18:#Gold, Gold, Gold!
                        Unit_List[x][y].append(11)

                    if random_chance in range(88, 89) and x > 0 and x < 16 and biome in range(25, 30):#Spooky Dark Crystals!
                        Unit_List[x][y].append(15)

                    if random_chance in range(89, 90) and x > 0 and x < 8:#Emerald!
                        Unit_List[x][y].append(13)

                    if random_chance in range(90, 94) and x > 0 and x < 24:#Thyrumite!
                        Unit_List[x][y].append(14)

                    if random_chance in range(94, 99):#Good ol' Coal!
                        Unit_List[x][y].append(6)

                    if random_chance in range(99, 101) and x > 0 and x < 8:#Diamonds!
                        Unit_List[x][y].append(12)
                if x >= 32:

                    if village_chance == 1:#This makes the village primitive
                        make_village(y)
                    if x == 32:
                        if Terrain_List[y] > 1:
                            Unit_List[x][y].append(4)
                            Terrain_List[y] -= 1

                        if Terrain_List[y] == 1:
                            Unit_List[x][y].append(5)
                            Terrain_List[y] -= 1

                        if Terrain_List[y] >= 0:
                            Unit_List[x][y].append(0)

#sinChange = math.sin(chunks)
#world_slope = math.sin(math.radians(x))

#And Finally...
    world_list.append(Unit_List)

def render_world_by_list(world_list, coords_list):
#
