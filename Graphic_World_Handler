#Graphic_World_Handler
#This is the script which loads the planes from cells.
import bge
cont = bge.logic.getCurrentController()
obj = cont.owner
scene = bge.logic.getCurrentScene()
default = False
chunks = 64
world_list = []

def chunk_sort(chunks1):
    total_chunks = chunks1
    for x in range(1,32):
        if (x ** 2) == total_chunks:
            xrows = math.sqrt(total_chunks)
            yrows = math.sqrt(total_chunks)
            Xoffset = xrows * (xrows - 1)
            Yoffset = Xoffset
#now lets make the table list for chunks
    Chunk_List = []
    for i in range(1,total_chunks+1):
        xcord = Xoffset + ((i % xrows) * 8)
        ycord = Yoffset + ((i / yrows) // 1) * 8)
        Chunk_List.append([xcord, ycord])
    return Chunk_List


def coord_plane_render_sort(direct, val, coords, prex, prey, prez):
    x = (coords - 7) + (prex * 2)
    y = (coords - 7) + (prey * 2) 
    z = -64 + (prez*2)
    scene.addObject(val + direct, “spawner”).worldPosition(x, y, z)
def val_sort(val):
    block_list = [Substratum, Water, Dirt, Grass, Stone, Coal, Stone, Coal, Tin, Copper, Aluminum, Iron, Gold, Thyrumite, Diamond, Emerald, Dark Crystal, Sand, Wood, Gravel, Clay, Ice, Obsidian, Clay Brick, Stone Bricks, Cement, Glass, Granite, Sandstone, Leaves, Ruby]
    return block_list[val]
#
def initial_render_list(WorldList, UnitList):
    for i in range(len(WorldList)):
        coords = UnitList[i]
        for y in range(len(WorldList[i])):
            for x in range(len(WorldList[i][y]):
                z = x//8
                if WorldList[i][y][x] == 0 or WorldList[i][y][x] < 32:
                    pass
                else:
                        if WorldList[i+1][y][x+1] !=0:
                            coord_plane_render_sort("+X", WorldList[i][y][x], coords, 2x, 2y, 2z)
                        if WorldList[i][y][x-1] !=0:
                           coord_plane_render_sort("-X", WorldList[i][y][x], coords, 2x, 2y, 2z)
                        if WorldList[i][y][x+8] !=0:
                           coord_plane_render_sort("+Z", WorldList[i][y][x], coords, 2x, 2y, 2z)
                        if WorldList[i][y][x-8] !=0:
                           coord_plane_render_sort("-Z", WorldList[i][y][x], coords, 2x, 2y, 2z)
                        if WorldList[i][y+1][x] !=0:
                            coord_plane_render_sort("+Y", WorldList[i][y][x], coords, 2x, 2y, 2z)
                        if WorldList[i][y-1][x-8] !=0:
                            coord_plane_render_sort("-Y", WorldList[i][y][x], coords, 2x, 2y, 2z)
